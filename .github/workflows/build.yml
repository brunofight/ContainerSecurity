name: CI

on:
  push:
    #tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
                                   
      - name: Build book
        run: |-
          npm install -g md-to-pdf
          mkdir -p _output
          cd Doc
          echo; echo "Input Folder Listing"
          ls
          echo; echo "Generating PDF"
          for f in *.md; do cat $f; echo; done | md-to-pdf > ../_output/blue-paper.pdf
          cd ../_output
          echo; echo "Output Folder Listing"
          ls
          cd ..
          
      - uses: actions/upload-artifact@master
        with:
          name: result
          path: output
       
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Version ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/result.pdf
          asset_name: ContainerSecurity.pdf
          asset_content_type: application/pdf
