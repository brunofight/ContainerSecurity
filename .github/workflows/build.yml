name: CI

on:
  push:
    branches:
      - main
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
           
      - name: create file list
        id: files_list
        run: |
          mkdir output  # create output dir
          # this will also include README.md
          echo "::set-output name=files::$(printf '"%s" ' *.md)"
          
      - uses: docker://pandoc/latex:2.9
        with:
          args: 
            --output=output/result.pdf ${{ steps.files_list.outputs.files }}            
          
      - uses: actions/upload-artifact@master
        with:
          name: output
          path: output
      
      - name: "Determine tag"
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $RELEASE_TAG
          release_name: Version $RELEASE_TAG
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/result.pdf
          asset_name: ContainerSecurity-$RELEASE_TAG.pdf
          asset_content_type: application/pdf
